#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-on-release;
        hold-trigger-key-positions = <28 29 30 31 44 27>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        hold-trigger-on-release;
        hold-trigger-key-positions = <33 34 35 36 37>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&trans      &kp N1           &kp N2           &kp N3             &kp N4        &kp N5    &mmv MOVE_UP     &kp N6  &kp N7        &kp N8     &kp N9   &kp N0    &trans
&kp ESCAPE  &kp Q            &kp W            &kp E              &kp R         &kp T     &mmv MOVE_DOWN   &kp Y   &kp U         &kp I      &kp O    &kp P     &kp BACKSPACE
&kp TAB     &hml A LEFT_GUI  &hml S LEFT_ALT  &hml D LEFT_SHIFT  &hml F LCTRL  &kp G     &mmv MOVE_LEFT   &kp H   &hmr J RCTRL  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp CAPS    &kp Z            &kp X            &kp C              &kp V         &kp B     &mmv MOVE_RIGHT  &kp N   &kp M         &kp COMMA  &kp DOT  &trans    &trans
&kp C_MUTE  &trans           &trans           &trans             &lt 1 SPACE   &trans    &mkp LCLK        &trans  &lt 2 ENTER   &trans     &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6     &mmv MOVE_UP     &kp F7        &kp F8          &kp F9        &kp F10    &kp F11  &kp F12
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5     &mmv MOVE_DOWN   &kp NUMBER_6  &kp N7          &kp N8        &kp N9     &kp N0   &trans
&trans  &trans        &kp HOME      &kp PG_DN     &kp PG_UP     &kp END    &mmv MOVE_LEFT   &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans   &trans
&trans  &trans        &trans        &trans        &trans        &trans     &mmv MOVE_RIGHT  &trans        &trans          &trans        &trans     &trans   &trans
&trans  &trans        &trans        &trans        &trans        &trans     &mkp LCLK        &trans        &trans          &trans        &trans     &trans
            >;

            display-name = "layer1";
        };

        layer_2 {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &trans       &trans    &trans       &mmv MOVE_UP     &trans     &trans     &trans       &trans     &trans      &trans
&bt BT_CLR_ALL  &kp EXCL      &kp AT        &kp HASH     &kp DLLR  &kp PRCNT    &mmv MOVE_DOWN   &kp CARET  &kp AMPS   &kp STAR     &kp GRAVE  &kp TILDE   &trans
&trans          &kp DQT       &kp LBKT      &kp LBRC     &kp LPAR  &kp COMMA    &mmv MOVE_LEFT   &kp FSLH   &kp MINUS  &kp EQUAL    &kp COLON  &kp SEMI    &trans
&trans          &kp SQT       &kp RBKT      &kp RBRC     &kp RPAR  &kp DOT      &mmv MOVE_RIGHT  &kp BSLH   &kp UNDER  &kp PLUS     &kp PIPE   &kp QMARK   &trans
&trans          &sys_reset    &soft_off     &bootloader  &trans    &trans       &mkp LCLK        &trans     &trans     &bootloader  &soft_off  &sys_reset
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
